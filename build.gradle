plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.software'
version = '0.0.1-SNAPSHOT'

jacoco {
	toolVersion = "0.8.10"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	reports {
		junitXml.required.set(true)
		html.required.set(true)
		html.outputLocation.set(file("$buildDir/reports/tests"))
	}
}

//tasks.named('jacocoTestReport') {
//	dependsOn test
//
//	reports {
//		xml.required.set(true)
//		html.required.set(true)
//		html.outputLocation.set(file("$buildDir/reports/jacoco/test"))
//	}
//
//	classDirectories.setFrom(
//			files(sourceSets.main.output.classesDirs)
//	)
//	sourceDirectories.setFrom(
//			files(sourceSets.main.allSource.srcDirs)
//	)
//	executionData.setFrom(fileTree(buildDir).include("**/jacoco/test.exec"))
//}
